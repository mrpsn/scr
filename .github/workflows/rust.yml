name: Rust

on:
  push:
    branches: [ "master" ]
    tags: ["v*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  ubuntu_build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release

  windows_build:
      runs-on: windows-latest
      steps:
        - uses: actions/checkout@v3

        - name: Rust build
          id: build
          run: |
            echo "github.ref = ${{ github.ref }}  github.event.ref = ${{ github.event.ref }}"
            cargo build --release --target-dir nuget

        - name: upload build artifact
          uses: actions/upload-artifact@master
          with:
            name: scanr.exe
            path: nuget/release/scanr.exe

        - name: Package for NuGet
          id: package
          if: startsWith(github.ref, 'refs/tags/v')
          env:
            CHOCO_API_KEY: ${{ secrets.CHOCO_API_KEY }}
          run: |
            cd nuget
            
            $version = cargo metadata --no-deps --format-version 1 | jq '.packages[0].version' --raw-output
            echo "setting nupsec version=$version" 
            $nuspec = Get-Content -Path "scanr.nuspec" -Raw
            $nuspec = $nuspec -replace '0.0.0', $version
            $nuspec | Set-Content -Path "scanr.nuspec"
            
            $md5 = (Get-FileHash -Path "release\scanr.exe" -Algorithm MD5).Hash
            $sha = (Get-FileHash -Path "release\scanr.exe" -Algorithm SHA256).Hash
            
            $verificationContent = Get-Content -Path "verification.txt" -Raw
            $verificationContent = $verificationContent -replace '\[MD5\]', $md5 -replace '\[SHA\]', $sha
            $verificationContent | Set-Content -Path "verification.txt"
            
            dir
            choco pack
            $nupkg_file = (Get-ChildItem -Path *.nupkg).Name
            choco push $nupkg_file --source https://push.chocolatey.org/ --api-key ${{ secrets.CHOCO_API_KEY }}
            echo "nupkg_file=$nupkg_file" >> $GITHUB_OUTPUT

        - name: upload package artifact
          uses: actions/upload-artifact@master
          env:
            PACKAGE: ${{ steps.package.outputs.nupkg_file }}
          with:
            name: $PACKAGE
            path: nuget/$PACKAGE
            
        - name: Create GitHub Release
          id: release
          if: startsWith(github.ref, 'refs/tags/v')
          uses: softprops/action-gh-release@v1
          with:
            files: |
              'nuget/*.nupkg'
              'nuget/release/scanr.exe'
            token: ${{ secrets.GITHUB_TOKEN }}
